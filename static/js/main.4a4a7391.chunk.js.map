{"version":3,"sources":["TouchWheel.js","Controls.js","Screen.js","tick.m4a","App.js","reportWebVitals.js","index.js"],"names":["TICK_STEP","nextTick","mouseDown","lastCoords","angleChange","totalRotation","TouchWheel","props","className","onMouseOut","e","onMouseUp","onMouseDown","onMouseMove","throttle","target","matches","currentX","currentY","targetNode","centerX","offsetLeft","offsetWidth","centerY","offsetTop","offsetHeight","getCenterCoords","document","querySelector","lastX","lastY","change","rad","cx","cy","ox","oy","mx","my","x1","y1","x2","y2","d1","Math","max","sqrt","d2","asin","getAngleBetween","PI","updateRotation","clientX","clientY","onTick","direction","checkTick","Controls","xmlns","viewBox","points","x","y","width","height","Screen","type","header","statusIcon","menuItems","selectedIndex","d","map","i","name","hasSubMenu","App","tick","Audio","tickSrc","useState","screenProps","setScreenProps","length","play","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4a4a7391.chunk.js","sourcesContent":["import { throttle } from \"lodash\";\n\n// degrees needed to scroll before a tick\nconst TICK_STEP = 50;\n\nlet nextTick = TICK_STEP;\nlet mouseDown = false;\nlet lastCoords = [0, 0];\nlet angleChange = 0;\nlet totalRotation = 0;\n\nfunction TouchWheel(props) {\n  const handleMouseDown = (e) => {\n    mouseDown = true;\n  };\n\n  const handleMouseUp = (e) => {\n    mouseDown = false;\n    totalRotation = 0;\n    lastCoords = [0, 0];\n    nextTick = TICK_STEP;\n    angleChange = 0;\n  };\n\n  const handleMouseOut = (e) => {\n    mouseDown = false;\n    totalRotation = 0;\n    lastCoords = [0, 0];\n    nextTick = TICK_STEP;\n    angleChange = 0;\n  };\n\n  const handleMouseMove = (e) => {\n    if (e.target.matches(\".js-wheel-inner\")) return;\n    if (!mouseDown) return;\n\n    updateRotation(e.clientX, e.clientY);\n    checkTick();\n  };\n\n  function checkTick() {\n    const { onTick } = props;\n\n    if (angleChange < 0 && totalRotation <= nextTick) {\n      onTick({ direction: \"anticlockwise\" });\n      nextTick = totalRotation - TICK_STEP;\n    } else if (angleChange > 0 && totalRotation >= nextTick) {\n      onTick({ direction: \"clockwise\" });\n      nextTick = totalRotation + TICK_STEP;\n    }\n  }\n\n  function updateRotation(currentX, currentY) {\n    const $innerButton = document.querySelector(\".js-wheel-inner\");\n    const [centerX, centerY] = getCenterCoords($innerButton);\n    const [lastX, lastY] = lastCoords;\n\n    if (lastX === 0 || lastY === 0) {\n      lastCoords = [currentY, currentY];\n      return;\n    }\n\n    const change = toDegrees(\n      getAngleBetween(centerX, centerY, lastX, lastY, currentX, currentY)\n    );\n\n    if (change !== 0) {\n      angleChange = change;\n      totalRotation = totalRotation + change;\n    }\n\n    lastCoords = [currentX, currentY];\n  }\n\n  // The function will return a negative change in angle if counter clockwise and positive if clockwise.\n  // cx,cy center of rotation\n  // ox,oy old position of mouse\n  // mx,my new position of mouse.\n  function getAngleBetween(cx, cy, ox, oy, mx, my) {\n    var x1 = ox - cx;\n    var y1 = oy - cy;\n    var x2 = mx - cx;\n    var y2 = my - cy;\n    var d1 = Math.max(0.001, Math.sqrt(x1 * x1 + y1 * y1));\n    var d2 = Math.max(0.001, Math.sqrt(x2 * x2 + y2 * y2));\n\n    return Math.asin((x1 / d1) * (y2 / d2) - (y1 / d1) * (x2 / d2));\n  }\n\n  function toDegrees(rad) {\n    return rad * (180 / Math.PI);\n  }\n\n  function getCenterCoords(targetNode) {\n    const centerX = targetNode.offsetLeft + targetNode.offsetWidth / 2;\n    const centerY = targetNode.offsetTop + targetNode.offsetHeight / 2;\n    return [centerX, centerY];\n  }\n\n  return (\n    <div\n      className=\"wheel\"\n      onMouseOut={handleMouseOut}\n      onMouseUp={handleMouseUp}\n      onMouseDown={handleMouseDown}\n      onMouseMove={throttle(handleMouseMove, 100)}\n    >\n      <div className=\"js-wheel-inner wheel-inner\"></div>\n    </div>\n  );\n}\n\nexport default TouchWheel;\n","function Controls(props) {\n  return (\n    <div className=\"controls\">\n      <div className=\"control\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"icon rewind\"\n          viewBox=\"0 0 100 125\"\n        >\n          <g>\n            <polygon points=\"90.25,30.239 73.322,40.451 56.025,50 73.322,59.557 90.242,69.761 89.864,50  \" />\n            <polygon points=\"56.025,30.239 39.101,40.451 22.107,49.83 22.107,30.239 10.25,30.239 10.25,69.761 22.107,69.761 22.107,50.17    39.101,59.553 56.025,69.761 55.639,50  \" />\n          </g>\n        </svg>\n      </div>\n      <div className=\"control\">MENU</div>\n      <div className=\"control\">\n        <svg\n          className=\"icon playpause\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 100 125\"\n        >\n          <polygon points=\"4.948,21.713 53.945,50.002 4.948,78.286 \" />\n          <rect x=\"53.945\" y=\"21.713\" width=\"15.478\" height=\"56.573\" />\n          <rect x=\"80.77\" y=\"21.713\" width=\"15.48\" height=\"56.573\" />\n        </svg>\n      </div>\n      <div className=\"control\">\n        <svg\n          className=\"icon fast-forward\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 100 125\"\n        >\n          <g>\n            <polygon points=\"10.25,69.761 27.178,59.549 44.475,50 27.178,40.443 10.258,30.239 10.636,50  \" />\n            <polygon points=\"44.475,69.761 61.399,59.549 78.393,50.169 78.393,69.761 90.25,69.761 90.25,30.239 78.393,30.239 78.393,49.83    61.399,40.447 44.475,30.239 44.861,50  \" />\n          </g>\n        </svg>\n      </div>\n    </div>\n  );\n}\n\nexport default Controls;","function Screen(props) {\n  const { type, header, statusIcon, menuItems, selectedIndex } = props;\n  return (\n    <div className=\"screen-container\">\n      <div className=\"screen\">\n        <div className=\"screen-header\">\n          <div className=\"header-icon\">{statusIcon}</div>\n          <div className=\"title\">{header}</div>\n          <div className=\"header-icon\">\n            <svg\n              className=\"icon battery\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                className=\"primary\"\n                d=\"M20 9h1a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1h-1v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8c0-1.1.9-2 2-2h14a2 2 0 0 1 2 2v1zM4 8v8h14V8H4z\"\n              />\n              <rect width=\"6\" height=\"4\" x=\"6\" y=\"10\" className=\"secondary\" />\n            </svg>\n          </div>\n        </div>\n        <div className=\"screen-content\">\n          <ul className=\"screen-menu\">\n            {menuItems.map(({ name, hasSubMenu}, i) => (\n              <li key={name} className={`menu-item ${i === selectedIndex ? \"is-active\" : \"\"}`}>\n                <span>{name}</span>\n                {hasSubMenu && (\n                  <svg\n                  className=\"icon cheveron-right\"\n                  viewBox=\"0 0 5.8859 9.8\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    className=\"primary\"\n                    d=\"m0.2 8.2a1 1 0 0 0 1.4 1.4l4-4a1 1 0 0 0 0-1.4l-4-4a1 1 0 0 0-1.4 1.4l3.29 3.3-3.3 3.3z\"\n                  />\n                </svg>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Screen;\n","export default __webpack_public_path__ + \"static/media/tick.cb29c599.m4a\";","import { useState } from 'react';\nimport \"./App.css\";\nimport TouchWheel from \"./TouchWheel\";\nimport Controls from \"./Controls\";\nimport Screen from \"./Screen\";\nimport tickSrc from './tick.m4a'\n\nfunction App() {\n  const tick = new Audio(tickSrc);\n  const [screenProps, setScreenProps] = useState({\n    type: \"menu\",\n    header: \"iPod\",\n    statusIcon: null,\n    selectedIndex: 0,\n    menuItems: [\n      { name: \"Playlists\", hasSubMenu: true },\n      { name: \"Browse\", hasSubMenu: true },\n      { name: \"Extras\", hasSubMenu: true },\n      { name: \"Settings\", hasSubMenu: true },\n      { name: \"Backlight\", hasSubMenu: false },\n    ],\n  });\n\n  function handleTick({ direction }) {\n    const { selectedIndex, menuItems } = screenProps;\n    if (direction === \"clockwise\" && selectedIndex < menuItems.length - 1) {\n      setScreenProps({ ...screenProps, selectedIndex: selectedIndex + 1});\n    }\n    \n    if (direction === \"anticlockwise\" && selectedIndex > 0) {\n      setScreenProps({ ...screenProps, selectedIndex: selectedIndex - 1 });\n    }\n\n    tick.play();\n  }\n\n  return (\n    <div className=\"ipod\">\n      <Screen {...screenProps}/>\n      <Controls />\n      <TouchWheel onTick={handleTick} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}